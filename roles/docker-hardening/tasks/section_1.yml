---
- name: 1.1 Ensure a separate partition for containers has been created (Scored)\
  debug: msg="This is a manual configuration"
  tags:
   - not_scored
   - section1.1

- name: 1.2 Ensure the container host has been Hardened (Not Scored)
  debug: msg="Not covered by this role"
  tags:
   - not_scored
   - section1.2
   
- name: 1.3 Ensure Docker is up to date (Not Scored)
  shell: docker version | grep -A1 Client | grep Version | awk '{print $2}'
  register: docker_version

- debug: 
    msg: "Docker Version is up to date: {{ docker_version.stdout }}"
  when: docker_version.stdout >= '18.09.5'

- yum:
    name: docker-ce
    state: latest
  when: docker_version.stdout < '18.09.5'
  tags:
   - not_scored
   - section1.3    

- name: 1.4 Ensure only trusted users are allowed to control Docker daemon (Scored)
  shell: getent group docker
  ignore_errors: yes
  register: trusted_users_result

- debug: msg="List of trusted users allowed to control Docker daemon"

- debug:
    msg: "{{ trusted_users_result.stdout_lines }}"
  tags:
   - scored
   - section1.4
   
#  user:
#    name: "{{ item }}"
#    group: docker 
#  with_items: "{{ trusted_users }}"   

- name: 1.5 Ensure auditing is configured for the docker daemon (Scored)
  shell: auditctl -l | grep /usr/bin/dockerd | wc -l
  ignore_errors: yes
  register: audit_result

- stat:
    path: /usr/bin/dockerd
  register: path_docker 

- debug: msg="N/A - Docker files and directories - /usr/bin/dockerd does not exists"
  when: audit_result.stdout == '0' and path_docker.stat.exists == false
  
- debug: msg="Auditing for Docker files and directories - /usr/bin/dockerd is already configured"
  when: audit_result.stdout != '0' and path_docker.stat.exists == true
  
- lineinfile: 
    dest: /etc/audit/rules.d/audit.rules 
    line: "-w /usr/bin/dockerd -k docker"
    state: present
  notify: Reload auditd Rules
  when: audit_result.stdout == '0' and path_docker.stat.exists == true
  tags:
   - scored
   - section1.5

- name: 1.6 Ensure auditing is configured for Docker files and directories - /var/lib/docker (Scored)
  shell: auditctl -l | grep /var/lib/docker | wc -l
  ignore_errors: yes
  register: audit_result
  
- stat:
    path: /var/lib/docker
  register: path_docker    

- debug: msg="Docker files and directories - /var/lib/docker does not exists"
  when: audit_result.stdout == '0' and path_docker.stat.exists == false
  
- debug: msg="Auditing for Docker files and directories - /var/lib/docker is already configured"
  when: audit_result.stdout != '0' and path_docker.stat.exists == true and path_docker.stat.isdir == true
  
- lineinfile: 
    dest: /etc/audit/rules.d/audit.rules 
    line: "-w /var/lib/docker -k docker"
    state: present
  notify: Reload auditd Rules
  when: audit_result.stdout == '0' and path_docker.stat.exists == true and path_docker.stat.isdir == true
  tags:
   - scored
   - section1.6

- name: 1.7 Ensure auditing is configured for Docker files and directories - /etc/docker (Scored)
  shell: auditctl -l | grep /etc/docker | wc -l
  ignore_errors: yes
  register: audit_result

- stat:
    path: /etc/docker
  register: path_docker

- debug: msg="N/A - Docker files and directories - /etc/docker does not exists"
  when: audit_result.stdout == '0' and path_docker.stat.exists == false
  
- debug: msg="Auditing for Docker files and directories - /etc/docker is already configured"
  when: audit_result.stdout != '0' and path_docker.stat.exists == true and path_docker.stat.isdir == true 
  
- lineinfile: 
    dest: /etc/audit/rules.d/audit.rules 
    line: "-w /etc/docker -k docker"
    state: present
  notify: Reload auditd Rules
  when: audit_result.stdout == '0' and path_docker.stat.exists == true and path_docker.stat.isdir == true 
  tags:
   - scored
   - section1.7

- name: 1.8 Ensure auditing is configured for Docker files and directories - docker.service (Scored)
  shell: auditctl -l | grep /lib/systemd/system/docker.service | wc -l
  ignore_errors: yes
  register: audit_result
  
- stat:
    path: /lib/systemd/system/docker.service
  register: path_docker_service 

- debug: msg="N/A - Docker files and directories - /lib/systemd/system/docker.service does not exists"
  when: audit_result.stdout == '0' and path_docker_service.stat.exists == false
  
- debug: msg="Auditing for Docker files and directories - /lib/systemd/system/docker.service is already configured"
  when: audit_result.stdout != '0' and path_docker_service.stat.exists == true
  
- lineinfile: 
    dest: /etc/audit/rules.d/audit.rules 
    line: "-w /lib/systemd/system/docker.service -k docker"
    state: present
  notify: Reload auditd Rules
  when: audit_result.stdout == '0' and path_docker_service.stat.exists == true
  tags:
   - scored
   - section1.8

- name: 1.9 Ensure auditing is configured for Docker files and directories - docker.socket (Scored)
  shell: auditctl -l | grep /lib/systemd/system/docker.socket | wc -l
  ignore_errors: yes
  register: audit_result

- stat:
    path: /lib/systemd/system/docker.socket
  register: path_docker_socket 

- debug: msg="N/A - Docker files and directories - /lib/systemd/system/docker.socket does not exists"
  when: audit_result.stdout == '0' and path_docker_socket.stat.exists == false
  
- debug: msg="Auditing for Docker files and directories - /lib/systemd/system/docker.socket is already configured"
  when: audit_result.stdout != '0' and path_docker_socket.stat.exists == true
  
- lineinfile: 
    dest: /etc/audit/rules.d/audit.rules 
    line: "-w /lib/systemd/system/docker.socket -k docker"
    state: present
  notify: Reload auditd Rules
  when: audit_result.stdout == '0' and path_docker_socket.stat.exists == true
  tags:
   - scored
   - section1.9

- name: 1.10 Ensure auditing is configured for Docker files and directories - /etc/default/docker (Scored)
  shell: auditctl -l | grep /etc/default/docker | wc -l
  ignore_errors: yes
  register: audit_result

- stat:
    path: /etc/default/docker
  register: path_docker 

- debug: msg="N/A - Docker files and directories - /etc/default/docker does not exists"
  when: audit_result.stdout == '0' and path_docker.stat.exists == false
  
- debug: msg="Auditing for Docker files and directories - /etc/default/docker is already configured"
  when: audit_result.stdout != '0' and path_docker.stat.exists == true
  
- lineinfile: 
    dest: /etc/audit/rules.d/audit.rules 
    line: "-w /etc/default/docker -k docker"
    state: present
  notify: Reload auditd Rules
  when: audit_result.stdout == '0' and path_docker.stat.exists == true
  tags:
   - scored
   - section1.10

- stat:
    path: /etc/docker/daemon.json
  register: path_docker_daemon 
  
- name: 1.11 Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json (Scored)
  shell: auditctl -l | grep /etc/docker/daemon.json | wc -l
  ignore_errors: yes
  register: audit_result

- debug: msg="N/A - Docker files - /etc/docker/daemon.json does not exists"
  when: audit_result.stdout == '0' and path_docker_daemon.stat.exists == false
  
- debug: msg="Auditing for Docker files - /etc/docker/daemon.json is already configured"
  when: audit_result.stdout != '0' and path_docker_daemon.stat.exists == true
  
- lineinfile: 
    dest: /etc/audit/rules.d/audit.rules 
    line: "-w /etc/docker/daemon.json -k docker"
    state: present
  notify: Reload auditd Rules
  when: audit_result.stdout == '0' and path_docker_daemon.stat.exists == true
  tags:
   - scored
   - section1.11

- name: 1.12 Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd (Scored)
  shell: auditctl -l | grep /usr/bin/containerd | wc -l
  ignore_errors: yes
  register: audit_result

- stat:
    path: /usr/bin/containerd
  register: path_containerd 

- debug: msg="Docker files and directories - /usr/bin/containerd does not exists"
  when: audit_result.stdout == '0' and path_containerd.stat.exists == false
  
- debug: msg="Auditing for Docker files and directories - /usr/bin/containerd is already configured"
  when: audit_result.stdout != '0' and path_containerd.stat.exists == true
  
- lineinfile: 
    dest: /etc/audit/rules.d/audit.rules 
    line: "-w /usr/bin/containerd -k docker"
    state: present
  notify: Reload auditd Rules
  when: audit_result.stdout == '0' and path_containerd.stat.exists == true
  tags:
   - scored
   - section1.12

- name: 1.13 Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc (Scored)
  shell: auditctl -l | grep /usr/bin/runc | wc -l
  ignore_errors: yes
  register: audit_result

- stat:
    path: /usr/bin/runc
  register: path_docker_runc

- debug: msg="N/A - Docker files - /usr/bin/runc does not exists"
  when: audit_result.stdout == '0' and path_docker_runc.stat.exists == false
  
- debug: msg="Auditing for Docker files - /usr/bin/runc is already configured"
  when: audit_result.stdout != '0' and path_docker_runc.stat.exists == true
  
- lineinfile: 
    dest: /etc/audit/rules.d/audit.rules 
    line: "-w /usr/bin/runc -k docker"
    state: present
  notify: Reload auditd Rules
  when: audit_result.stdout == '0' and path_docker_runc.stat.exists == true
  tags:
   - scored
   - section1.13