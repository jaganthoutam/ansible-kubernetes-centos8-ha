- name: |
         "4.1.1 Ensure that the kubelet service file permissions are set to 644 or more restrictive (Scored)"
         "4.1.2 Ensure that the kubelet service file ownership is set to root:root (Scored)"
  file:
    path: "{{ kubelet_config }}"
    owner: root
    group: root
    mode: 0644
    state: file

- name: Copy ca.pem to node
  copy:
    src: "{{ ca_file }}"
    dest: "{{ ca_file }}"
    mode: '0644'

- name: Copy ca.pem file
  shell: "cat {{ ca_file }} > /etc/kubernetes/ca.pem"

- name: Copy kube-proxy.pem to node
  copy:
    src: "{{ kubeproxy_file }}"
    dest: "{{ kubeproxy_file }}"
    mode: '0644'

- name: Copy kube-proxy.pem file
  shell: "cat {{ kubeproxy_file }} > /etc/kubernetes/kube-proxy.pem"

- name: Copy kube-proxy-key.pem to node
  copy:
    src: "{{ kubeproxykey_file }}"
    dest: "{{ kubeproxykey_file }}"
    mode: '0644'

- name: Copy kube-proxy-key.pem file
  shell: "cat {{ kubeproxykey_file }} > /etc/kubernetes/kube-proxy-key.pem"

- name: Copy kubeconfig to node
  copy:
    src: "{{ kubeconfig_file }}"
    dest: "{{ kubeconfig_file }}"
    mode: '0644'

- name: Copy kubeconfig file
  shell: "cat {{ kubeconfig_file }} > /etc/kubernetes/proxy.conf"

- name: |
         "4.1.3 Ensure that the proxy kubeconfig file permissions are set to 644 or more restrictive (Scored)"
         "4.1.4 Ensure that the proxy kubeconfig file ownership is set to root:root (Scored)"
  file:
    path: "/etc/kubernetes/proxy.conf"
    owner: root
    group: root
    mode: 0644
    state: file

- name: |
         "4.1.5 Ensure that the kubelet.conf file permissions are set to 644 or more restrictive (Scored)"
         "4.1.6 Ensure that the kubelet.conf file ownership is set to root:root (Scored)"
  file:
    path: "/etc/kubernetes/kubelet.conf"
    owner: root
    group: root
    mode: 0644
    state: file

- name: |
         "4.1.7 Ensure that the certificate authorities file permissions are set to 644 or more restrictive (Scored)"
         "Ensure that the client certificate authorities file ownership is set to root:root (Scored)"
  file:
    path: "/etc/kubernetes/pki/ca.crt"
    owner: root
    group: root
    mode: 0644
    state: file

- name: "Checker for kubelet configuration"
  shell: "cat {{ kubelet_config }}"
  register: presence_kubelet

- name: Copy crt to node
  copy:
    src: "{{ crt_file }}"
    dest: "{{ crt_file }}"
    mode: '0644'

- name: Copy crt file
  shell: "cat {{ crt_file }} > /etc/kubernetes/pki/apiserver.crt"

- name: Copy crt to node
  copy:
    src: "{{ key_file }}"
    dest: "{{ key_file }}"
    mode: '0644'

- name: Copy key file
  shell: "cat {{ key_file }} > /etc/kubernetes/pki/apiserver.key"

- name: Reset kubelet.conf
  lineinfile:
    dest: "{{ kubelet_config }}"
    regexp: "Environment=\"KUBELET_SYSTEM_PODS_ARGS"
    state: absent

- name: Reset kubelet.conf
  lineinfile:
    dest: "{{ kubelet_config }}"
    regexp: "Environment=\"KUBELET_AUTHZ_ARGS"
    state: absent

- name: Reset kubelet.conf
  lineinfile:
    dest: "{{ kubelet_config }}"
    regexp: "Environment=\"KUBELET_CERTIFICATE_ARGS"
    state: absent

- name: |
         "4.2.1 Ensure that the anonymous-auth argument is set to false (Scored)"
         "4.2.3 Ensure that the --client-ca-file argument is set as appropriate (Scored)"
         "4.2.4 Ensure that the --read-only-port argument is set to 0 (Scored)"
         "4.2.6 Ensure that the --protect-kernel-defaults argument is set to true (Scored)"
         "4.2.7 Ensure that the --make-iptables-util-chains argument is set to true (Scored)"
         "4.2.9 Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture (Not Scored)"
         "4.2.11 Ensure that the --rotate-certificates argument is not set to false (Scored)"
         "4.2.12 Ensure that the RotateKubeletServerCertificate argument is set to true (Scored)"
         "4.2.10 Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate (Scored)"
         "4.2.13 Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers (Not Scored)"
  lineinfile:
    dest: "{{ kubelet_config }}"
    insertbefore: 'Environment="KUBELET_CONFIG_ARGS='
    line: "{{ item.line }}"
  with_items:
    - { line: 'Environment="KUBELET_SYSTEM_PODS_ARGS=--anonymous-auth=false --read-only-port=0 --protect-kernel-defaults=true --make-iptables-util-chains=true --event-qps=0"' }
    - { line: 'Environment="KUBELET_AUTHZ_ARGS=--client-ca-file=/etc/kubernetes/pki/ca.crt"' }
    - { line: 'Environment="KUBELET_CERTIFICATE_ARGS=--feature-gates=RotateKubeletServerCertificate=true --rotate-certificates=true --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256  --tls-cert-file=/etc/kubernetes/pki/apiserver.crt --tls-private-key-file=/etc/kubernetes/pki/apiserver.key"' }

- shell: "sed -i '${s/$/ $KUBELET_SYSTEM_PODS_ARGS/}' {{ kubelet_config }}"
  when: presence_kubelet.stdout is not search('$KUBELET_SYSTEM_PODS_ARGS')

- shell: "sed -i '${s/$/ $KUBELET_AUTHZ_ARGS/}' {{ kubelet_config }}"
  when: presence_kubelet.stdout is not search('$KUBELET_AUTHZ_ARGS')

- shell: "sed -i '${s/$/ $KUBELET_CERTIFICATE_ARGS/}' {{ kubelet_config }}"
  when: presence_kubelet.stdout is not search('$UBELET_CERTIFICATE_ARGS')

- name: Daemon Reload
  systemd: daemon_reload=yes

- name: Restart kubelet service
  service:
    name: kubelet
    state: restarted  
    enabled: yes